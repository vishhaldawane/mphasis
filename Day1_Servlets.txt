







		Servlets and JSP
		|
	to generate "dynamic" web output


				
				Java Program
					|
			-----------------------------------------------------
			|		|			|
		applications		applets			servlets
			|		|			|
			main()		<-------life -cycle ------->
					init - once		init()	
					start - begin the view  service()
					stop - hide the view	destroy()
					paint - on refresh
					destroy - stop, then destroy
			|		|			|
			javac		javac			javac (develop it)
			java		appletviewer		apache+tomcat (deploy it)
								browser (run it)



	Applet = small java program (.class) <-- javac
		 embedded in HTML file (.html) <-- browser/appletviewer

	

	


	Its a "server side" java component ( .class file )
	to generate dynamic web output - we have seen google currency converter

	it is never downloaded at at the client side

	it always run on the Server side

	hence it is known as SERVlet

	RC HA MT P C T S

			Machine1		MyProject <-- folder
			|			 |
			|  apachet + tomcat (CurrencyConverterServlet.class)
			|	nick name as -> convert
			|		init(), service(), destroy()
			|		 |	  |		|
			|		once  for each	 if existing file
			|		      customer   is updated
	---------------------------------------------------------------
		|	  |		|		|	
		Machine2 Machine3	Machine4	Machine5
		|		|	  |		|
		|		|	  | http://ipMachine1:8080/MyProject/convert ( tannzanian / USD)
		|		| http://ipMachine1:8080/MyProject/convert (USD/Kuwaiti Dinar)
		|	http://ipMachine1:8080/MyProject/convert (Rs/USD)
browser: http://ipMachine1:8080/MyProject/convert (USD/EUR)
				   |
			Web Application Project folder







	lets start coding our first servlet program


	1		Servlet <-- interface <--- javax.servlet
			 | init(), service(), destroy()
			 | getServletConfig(), getServletInfo()
			 |
		---------------------------------
		| implements
		|
  2 abstract  GenericServlet <--- javax.servlet
		| init() {} destroy() { } 
		| getServletConfig() { } getServletInfo() { }
	-----------------------------------------------------------
	| /convert				|
 3 CurrencyConverterServlet 			HttpServlet - to process http request
	service() { must be defined here }	| service() already defined here,
						|- never override service method
					-----------------------------------
					|	|	|	|	|
				  doGet()   doPost() 
				 "default"

<-- you have to specify the "URL mapping name" ie any nick name



	This -> MyProject --> is your web application folder/project


	Web Application Project folder has a standard structure as below

		 CurrencyConversionProject <-- make it as DYNAMIC WEB PROJECT <-eclipse
			    |
	----------------------------------------------
		|			|
		WEB-INF			lib
		|			|
		|			jar files here
	--------------------------
	|			|
   classes			web.xml <-- deployment descriptor file
        |			     |
CurrencyConverterServlet.class       describe your resources
					/convert would be mapped here
					
	below is the URL to start the web applicatiom
	|
	http://localhost:8085/CurrencyConversionProject/
					|
				it will search "web.xml" and will identify
				the first welcome file to run - Home.html


A.	How to make your First Dynamic Web project

1.	right click -> New -> Project -> Web -> Dynamic Web Project
2.      Project name -> MyProject1
3.	Target Runtime -> click on New Runtime... button
4. 	Under Apache section -> select Apache Tomcat 9 -> next
5.	specify the tomcat installation folder ->  issue below path
		D:\JAVATRAINING\java\apache-tomcat-9.0.45
		<--thisIsAsPerUrpc--><-----as it is ---->

6.	dynamic web module version : select as -> 2.5  ( MUST DO IT )
7.	CLICK ON NEXT,		8.	CLICK ON NEXT	9. 	CLICK ON FINISH

	In the proejct	 | locate ->WebContent 	|right click on it
				|
				New -> HTML file
					|
					index.html -> finish

B.	inside index.html -> write some static tag code
C.	right click on project -> Run As -> Run on Server -> next -> Finish
		(Restart server all the time - for each run)


		

How to make your own servlet

A. 1	right click on src -> New -> Servlet

 2	specify java package -> com.currency
	specify servlet name -> CurrencyConverterServlet1
	specify super class  -> click on browse -> 
			Choose a super class -> type-> GenericServlet -> Ok

 3	click NEXT -> URL mappings -> select it -> Click Edit...
			-> supply Pattern as /convert -> NEXT

 4	click the check boxes for init, service, destroy

 5	FINISH

B.	Open CurrencyConverterServlet1.java
		and write sysout lines in each function as per its contract

C. 	Observe the web.xml -> servlet tag, servlet-mapping tag
D.	right click on the project -> Run as ->Run on Server
E. 	browser url would be 
	http://localhost:8085/CurrencyConversionProject/convert
							  |
						add the above word press GO


	Todays assignment

		servlet with JDBC

			show the output of emp table 
			
	make one new servlet as EmployeeServlet to process this assignment
				   |
				known as "/emps" url pattern






			ServletWithParametersProject (1)
				|
	---------------------------------------------------
		|				| <-- managed by WebContent
		WEB-INF			DataEntry.html		for eclipse
		|				|
		|				input 3 values from user
		|				submit -> action="dept"
	---------------------------------------
	|		|		|
	classes		web.xml		lib
	|		|
DepartmentServlet <----/dept
			welcome file->DataEntry.html

	(1) - Run this on Server
	(2) - web.xml -> welcome file -> DataEntry.html would run and wait
					 for user input and submit click
	(3) - on click of submit -> dept -> DepartmentServlet is instantiated
	(4) init() is called, service is called
	(5) service -> will read request.getParameter to read 3 html values
	(6) it will serve these 3 values back to the customer in table format





<input type=submit name=submit value="Add Dept">
<input type=submit name=submit value="Delete Dept">
<input type=submit name=submit value="Find All Depts">
<input type=submit name=submit value="Find Dept">
<input type=submit name=submit value="Modify Dept">









	WE ARE LIVING IN A 7 FLOOR BUILDING - BUT OUR 
	MAIN STAY IS ALWAYS ON TH 4TH FLOOR
	- NEVER BEEN TO ANY OTHER FLOORS - BUT POSSIBLE TO VISIT 



		7	SUPER - conscious - (mind - intangible )
			|
		6	cosmic conscious - 
			|
		5	unity conscious (mind - intangible )
			|
WE LIVE HERE ->	4	conscious (mind - intangible ) - LEARN JAVA OR WORLDLY MATTERS
			|
		3	unconscious (mind - intangible ) - RUNS UR HEART,LIVER
			|			BRAIN ALL INTERNAL ORGANS
			|
		2	unity unconscious (mind - intangible )
			|
		1	cosmic unconscious (mind - intangible )






		




		public void addDepartment(Department deptObj) throws DepartmentAlreadyExistException
		{
			
		}

		from your servlet
		|
			try {
				Department dept = new Department();
				ddi.addDepartment(dept);
				pw.println("<h3>Department added...</h3>");
			}
			catch(DepartmentAlreadyExistException e)
			{
				pw.println("<h3>Department addition issue : "+e.getMessage()+"</h3>");	
			}
			

		who has placed the order-----------+
		|				cust info - 
		|				   | name/email/mobile/address/fooddeatils
		|				   |		
		Once your confirm your order - OrderServlet
		|                                      |
		prepare the food item		- PrepareFoodServlet
		|                                      |
		once the food item is prepared         |
		|                                      |
		out for delivery		- DeliveryServlet


	Request processing lifecycle

		A		B		C
		|		|		|
		include		include		include
		outputA	   +	outputB    +    outputC
		
		forward		forward		ultimate output
		outputignored	outputignored	outputC shown			

		RequestDispatcher in the above example
			|
		-------------------
		|		|
		include		forward

	=============================================================
		

	Session processing lifecycle

                     ------------------User3(cart)--------+
                     |                    |               |
		ClothServlet	ElectronicServlet	BillingServlet
                |                       |                     | |
		|			|		      |	|
		|			+------User2(cart)----+ |
		|                                               |
		---------------User1(cart)----------------------+
	
	
		HttpSession <-- similar as cart in a shopping mall
			|
		---------------------
		|		|
	setAttribute		getAttribute

	ClothServlet   will maintain a table for user1,user2,user3
	ElectServlet   will maintain a table for user1,user2,user3
	BillingServlet will maintain a table for user1,user2,user3


	and that table would be a "hash table" with unique user id


	session id
	24 digit/
	universal
	id		ClothServlet	ElectServlet	BillingServlet
	|		|		|		|
	|		|               |               |
	123(user1)	shirt | jeans   NA		cost here
			3        5	-

	223(user2)	NA		tv  video	cost here
			-		2	5

	333(user3)	shirt  | jeans	tv  video	cost here
			2        5       1   7


	First Extract that zip file from github
	|
	rightclick in project explorer
	-> import -> import...
	-> General -> Existing project into workspace
	-> Select Root directory : The EXTRACTED FOLDER OF SessionProject
	-> checkbox -> Copy Project into existing workspace
	-> Finish

	-> Rightclick on the SessionProject->properties
		and refix the JRE System Library (which is unbound)
			-> java build path - remove the unbounded library
			-> LibrariesTAB=>Add Library->JRE system library
			-> select workspace default JRE ->finish
			
		
		and refix the Server Runtime Library (which is unbound)
			-> java build path - remove the unbounded library
			-> LibrariesTAB=>Add Library->Server Runtime
			-> select Apache tomcat -> finish

some people have to change the port number depending your apache 8080/8085
		




	What is Java script????



		its a client side (Browser) code 
		to perform validation on html file

		.html	.css	.js
		|	|	|
		view	style	validation


		JSP = java server page (means it will never go to browser)
		.jsp files ( are run on tomcat - never goes to browser)
		.js  file (javascript goes to the browser and runs there)

			AirlineApplication
				|
		--------------------------------------------------------
		|		|	|	  |		|
		WEB-INF	    index.html index.css index.js	index.jsp
		|
	----------------
	|
	classes
		
				| apache+tomcat
				| web	    |
				| server   servlet container to manage
				|	   the life cycle of servlet
				|	   index.html+index.css+index.js
				|
				|   .jsp/servlet will run here on tomcat and
				|   "output" of that will goto browser
				|
		------------------------------
		|
		|
		|
	------------------------------
	|	|	|	|
	cust1	cust2	cust3	cust.....
	Browser Browser Browser Browser
	html	html	html	html
	css	css	css	css
	js	js	js	js




	What is required knowlege to make a servlet

		1. packages ..make your package
		2. import  ...sevlet packages
		3. extends GenericServlet
		4. learn constructor 
		5. init, destroy, service
		6. parameters of service --request and response
		7. make print writer from response
		8. then finally pw.println........


GreetServlet.java
---------------------
	pw.println("   <h7> Greeting from Servlet</h7>     ");
	   |				|		   |
	java code		   html tag		java code


		html is imprisoned / locked in 	of java code


First.jsp	--> now the java code is locked inside html tags
----------------
		</head>
		<body>
		for(int i=1;i<=6;i++)
		{
			pw.println("<h"+i+"> Greeting from Servlet</h"+i+">");
		}
		</body>

	
First.jsp -> JSP Engine translates that jsp file into a .java code (servlet )

		First.jsp --> First_jsp.java <--your servlet autocoding here
				|
				First_jsp.class <-- this is deployed






	4th Generation time table


	=================================================================
			|	URGENT	| 	NOT URGENT	
	=================================================================
			|whatsapp	|	brushing teeth
			|facebook	|
			|instagram	|
	IMPORTANT	|door bell ring |	bathing 
			|		|
			|		|
	-----------------------------------------------------------------
			|  		| project
	NOT 		|		| oracle study for coming exam
	IMPORTANT	|		| vodafone post bill
			|		|
	-----------------------------------------------------------------
	
	



		first.html
			|
	------------------------------------------
		|			|
		form			form
		|			|
		submit			submit
		|			|
	--------------			----------------------
	|	   |			|		|
	v_dno	First.jsp <-----+	v_dno		greet
		|		|			|
	----------------	|	------------------			
	|			|		|
request.getParameter(v_dno)	|	request.getParameter(v_dno)
				|		|
				|	RequestDispatcher->First.jsp
				|		|
				+------<----include/forward








1. scriptlet

	<% java code is here %>

2. fetch a variable/ fetch return value of a method
	    |			|
	<%=var>		<%= javaMethodCall %>

3. page directive
	<%@page contentType="text/html"%> same as response.setContentType("text/html");



	














	

	
		